{
  "address": "0xaeD5dB39c05f660D51A7f7D0201D3e3580AFa165",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ops",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "BeaconUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "seed",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        }
      ],
      "name": "DeployProxy",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "proxy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "deployFor",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "proxy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "determineProxyAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getNextSeed",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proxy",
          "type": "address"
        }
      ],
      "name": "getOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getProxyOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        }
      ],
      "name": "isProxy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ops",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "updateBeaconImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xce43be5f4529a6e2da5bc92c2183157963cfbc4223fd778fbcaeb20415f4b789",
  "receipt": {
    "to": null,
    "from": "0xCDf41a135C65d0013393B3793F92b4FAF31032d0",
    "contractAddress": "0xaeD5dB39c05f660D51A7f7D0201D3e3580AFa165",
    "transactionIndex": 26,
    "gasUsed": "2132929",
    "logsBloom": "0x
    "blockHash": "0x4fa8d765c5d21c2fd5f91c01ff80c9b280dcd2d7df1b5495d8609c15fc542ea1",
    "transactionHash": "0xce43be5f4529a6e2da5bc92c2183157963cfbc4223fd778fbcaeb20415f4b789",
    "logs": [
      {
        "transactionIndex": 26,
        "blockNumber": 26873142,
        "transactionHash": "0xce43be5f4529a6e2da5bc92c2183157963cfbc4223fd778fbcaeb20415f4b789",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000cdf41a135c65d0013393b3793f92b4faf31032d0",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000b5dd4cfe920b8000000000000000000000000000000000000000000000003b28f652d2c9de61b000000000000000000000000000000000000000000001bad726f721b39ac8c13000000000000000000000000000000000000000000000003b28407585cb4c563000000000000000000000000000000000000000000001bad727acff00995accb",
        "logIndex": 103,
        "blockHash": "0x4fa8d765c5d21c2fd5f91c01ff80c9b280dcd2d7df1b5495d8609c15fc542ea1"
      }
    ],
    "blockNumber": 26873142,
    "cumulativeGasUsed": "9931439",
    "status": 1,
    "byzantium": true
  },
  "args": ["0xA16a69BFbBf1600490E667865f91aAFA11d62371"],
  "numDeployments": 1,
  "solcInputHash": "ec5e7c52a427c068bbd33ab52da213bf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ops\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"BeaconUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"DeployProxy\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"deployFor\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"determineProxyAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getNextSeed\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxy\",\"type\":\"address\"}],\"name\":\"getOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getProxyOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"isProxy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ops\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"updateBeaconImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deploy()\":{\"returns\":{\"proxy\":\"Address of deployed proxy.\"}},\"deployFor(address)\":{\"params\":{\"owner\":\"Address to deploy the proxy for.\"},\"returns\":{\"proxy\":\"Address of deployed proxy.\"}},\"determineProxyAddress(address)\":{\"params\":{\"account\":\"Address to determine the proxy address for.\"}},\"getNextSeed(address)\":{\"returns\":{\"_0\":\"bytes32 Next seed which will be used for deployment for an address.\"}},\"getOwnerOf(address)\":{\"returns\":{\"_0\":\"address Owner of deployed proxy.\"}},\"getProxyOf(address)\":{\"returns\":{\"_0\":\"address Proxy address owned by account.\",\"_1\":\"bool Whether if proxy is deployed\"}},\"isProxy(address)\":{\"returns\":{\"_0\":\"bool Whether if a contract is an OpsProxy.\"}},\"updateBeaconImplementation(address)\":{\"params\":{\"implementation\":\"New OpsProxy implementation to be updated to.\"}}},\"stateVariables\":{\"_nextSeeds\":{\"details\":\"track the next seed to be used by an EOA.\"},\"_proxies\":{\"details\":\"track deployed proxies\"},\"_proxyOf\":{\"details\":\"track proxy of user\"},\"implementation\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"},\"version\":{\"return\":\"uint256 version of OpsProxyFactory.\",\"returns\":{\"_0\":\"uint256 version of OpsProxyFactory.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"BeaconUpdated(address,address)\":{\"notice\":\"Emitted when OpsProxy implementation is updated\"},\"DeployProxy(address,address,bytes32,bytes32,address)\":{\"notice\":\"Emitted when an OpsProxy is deployed.\"}},\"kind\":\"user\",\"methods\":{\"deploy()\":{\"notice\":\"Deploys OpsProxy for the msg.sender.\"},\"deployFor(address)\":{\"notice\":\"Deploys OpsProxy for another address.\"},\"determineProxyAddress(address)\":{\"notice\":\"Determines the OpsProxy address when it is not deployed.\"},\"updateBeaconImplementation(address)\":{\"notice\":\"Update OpsProxy implementation\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/opsProxy/OpsProxyFactory.sol\":\"OpsProxyFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x68861bcc80cacbd498efde75aab6c74a486cc48262660d326c8d7530d9752097\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f0f878c796dfc7feba6d3c4e3e526c14c7deae8b7bfc71088e3f38fab0d77b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0x0edeb16b9821ae2b16e9d69c383b38d3ad2fbb3e0c06cf809a0786d96e602551\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/BeaconProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IBeacon.sol\\\";\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"../ERC1967/ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\\n *\\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\\n * conflict with the storage layout of the implementation behind the proxy.\\n *\\n * _Available since v3.4._\\n */\\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the proxy with `beacon`.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\\n     * will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\\n     * constructor.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract with the interface {IBeacon}.\\n     */\\n    constructor(address beacon, bytes memory data) payable {\\n        assert(_BEACON_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.beacon\\\")) - 1));\\n        _upgradeBeaconToAndCall(beacon, data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current beacon address.\\n     */\\n    function _beacon() internal view virtual returns (address) {\\n        return _getBeacon();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address of the associated beacon.\\n     */\\n    function _implementation() internal view virtual override returns (address) {\\n        return IBeacon(_getBeacon()).implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract.\\n     * - The implementation returned by `beacon` must be a contract.\\n     */\\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\\n        _upgradeBeaconToAndCall(beacon, data, false);\\n    }\\n}\\n\",\"keccak256\":\"0x54878f0d2f40b5e13f84977bcd3c71d4c38581414e7efb4909cb16dd3ace392f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !Address.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x4823752b07b8ea4ca971b217e39457930e7cb103c2c91e2a29729e5ca907e4f0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"},\"contracts/functions/FExec.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.12;\\n\\nimport {GelatoBytes} from \\\"../vendor/gelato/GelatoBytes.sol\\\";\\n\\n// solhint-disable private-vars-leading-underscore\\n// solhint-disable func-visibility\\n\\nfunction _call(\\n    address _add,\\n    bytes memory _data,\\n    uint256 _value,\\n    bool _revertOnFailure,\\n    string memory _tracingInfo\\n) returns (bool success, bytes memory returnData) {\\n    (success, returnData) = _add.call{value: _value}(_data);\\n\\n    if (!success && _revertOnFailure)\\n        GelatoBytes.revertWithError(returnData, _tracingInfo);\\n}\\n\\nfunction _delegateCall(\\n    address _add,\\n    bytes memory _data,\\n    string memory _tracingInfo\\n) returns (bool success, bytes memory returnData) {\\n    (success, returnData) = _add.delegatecall(_data);\\n\\n    if (!success) GelatoBytes.revertWithError(returnData, _tracingInfo);\\n}\\n\",\"keccak256\":\"0x48375d0645cf4dfe7d3f18dc727cbb2322a09233a2e9cce9352a73acc357bf07\",\"license\":\"MIT\"},\"contracts/interfaces/IOpsProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.12;\\n\\ninterface IOpsProxy {\\n    /**\\n     * @notice Emitted when proxy calls a contract successfully in `executeCall`\\n     *\\n     * @param target Address of contract that is called\\n     * @param data Data used in the call.\\n     * @param value Native token value used in the call.\\n     * @param returnData Data returned by the call.\\n     */\\n    event ExecuteCall(\\n        address indexed target,\\n        bytes data,\\n        uint256 value,\\n        bytes returnData\\n    );\\n\\n    /**\\n     * @notice Initializes the OpsProxy contract. Called by OpsProxyFactory upon deployment.\\n     *\\n     * @param owner Address of owner of the proxy.\\n     */\\n    function initialize(address owner) external;\\n\\n    /**\\n     * @notice Multicall to different contracts with different datas.\\n     *\\n     * @param targets Addresses of contracts to be called.\\n     * @param datas Datas for each contract call.\\n     * @param values Native token value for each contract call.\\n     */\\n    function batchExecuteCall(\\n        address[] calldata targets,\\n        bytes[] calldata datas,\\n        uint256[] calldata values\\n    ) external payable;\\n\\n    /**\\n     * @notice Call to a single contract.\\n     *\\n     * @param target Address of contracts to be called.\\n     * @param data Data for contract call.\\n     * @param value Native token value for contract call.\\n     */\\n    function executeCall(\\n        address target,\\n        bytes calldata data,\\n        uint256 value\\n    ) external payable;\\n\\n    /**\\n     * @return address Ops smart contract address\\n     */\\n    function ops() external view returns (address);\\n\\n    /**\\n     * @return address Owner of the proxy\\n     */\\n    function owner() external view returns (address);\\n}\\n\",\"keccak256\":\"0x4d832714aa9a203e8d58aa86eaa2b8b70ad4fe7474825f0e7d20defad6c6ff61\",\"license\":\"MIT\"},\"contracts/interfaces/IOpsProxyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.12;\\n\\ninterface IOpsProxyFactory {\\n    /**\\n     * @notice Emitted when an OpsProxy is deployed.\\n     *\\n     * @param deployer Address which initiated the deployment\\n     * @param owner The address which the proxy is for.\\n     * @param seed Seed used for deployment.\\n     * @param salt Salt used for deployment.\\n     * @param proxy Address of deployed proxy.\\n     */\\n    event DeployProxy(\\n        address indexed deployer,\\n        address indexed owner,\\n        bytes32 seed,\\n        bytes32 salt,\\n        address proxy\\n    );\\n\\n    /**\\n     * @notice Emitted when OpsProxy implementation is updated\\n     *\\n     * @param oldImplementation Previous implementation of OpsProxy\\n     * @param newImplementation Current implementation of OpsProxy\\n     */\\n    event BeaconUpdated(address oldImplementation, address newImplementation);\\n\\n    /**\\n     * @notice Deploys OpsProxy for the msg.sender.\\n     *\\n     * @return proxy Address of deployed proxy.\\n     */\\n    function deploy() external returns (address payable proxy);\\n\\n    /**\\n     * @notice Deploys OpsProxy for another address.\\n     *\\n     * @param owner Address to deploy the proxy for.\\n     *\\n     * @return proxy Address of deployed proxy.\\n     */\\n    function deployFor(address owner) external returns (address payable proxy);\\n\\n    /**\\n     * @notice Update OpsProxy implementation\\n     *\\n     * @param implementation New OpsProxy implementation to be updated to.\\n     */\\n    function updateBeaconImplementation(address implementation) external;\\n\\n    /**\\n     * @notice Determines the OpsProxy address when it is not deployed.\\n     *\\n     * @param account Address to determine the proxy address for.\\n     */\\n    function determineProxyAddress(address account)\\n        external\\n        view\\n        returns (address);\\n\\n    /**\\n     * @return bytes32 Next seed which will be used for deployment for an address.\\n     */\\n    function getNextSeed(address account) external view returns (bytes32);\\n\\n    /**\\n     * @return address Proxy address owned by account.\\n     * @return bool Whether if proxy is deployed\\n     */\\n    function getProxyOf(address account) external view returns (address, bool);\\n\\n    /**\\n     * @return address Owner of deployed proxy.\\n     */\\n    function getOwnerOf(address proxy) external view returns (address);\\n\\n    /**\\n     * @return bool Whether if a contract is an OpsProxy.\\n     */\\n    function isProxy(address proxy) external view returns (bool);\\n\\n    /**\\n     * @return uint256 version of OpsProxyFactory.\\n     */\\n    function version() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf0cdb9ff6c890eed55ba094dee6448c4de55f6c0479009f0377116ba95ede043\",\"license\":\"MIT\"},\"contracts/opsProxy/OpsProxy.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\nimport {\\n    Initializable\\n} from \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport {GelatoBytes} from \\\"../vendor/gelato/GelatoBytes.sol\\\";\\nimport {_call} from \\\"../functions/FExec.sol\\\";\\nimport {IOpsProxy} from \\\"../interfaces/IOpsProxy.sol\\\";\\n\\ncontract OpsProxy is IOpsProxy, Initializable {\\n    using GelatoBytes for bytes;\\n\\n    address public immutable override ops;\\n    address public override owner;\\n\\n    modifier onlyAuth() {\\n        require(\\n            msg.sender == ops || msg.sender == owner,\\n            \\\"OpsProxy: Not authorised\\\"\\n        );\\n\\n        if (msg.sender == ops) {\\n            address taskCreator = _getTaskCreator();\\n\\n            require(\\n                taskCreator == owner,\\n                \\\"OpsProxy: Only tasks created by owner\\\"\\n            );\\n        }\\n        _;\\n    }\\n\\n    // solhint-disable no-empty-blocks\\n    constructor(address _ops) {\\n        ops = _ops;\\n    }\\n\\n    receive() external payable {}\\n\\n    function initialize(address _owner) external initializer {\\n        owner = _owner;\\n    }\\n\\n    ///@inheritdoc IOpsProxy\\n    function batchExecuteCall(\\n        address[] calldata _targets,\\n        bytes[] calldata _datas,\\n        uint256[] calldata _values\\n    ) external payable override onlyAuth {\\n        uint256 length = _targets.length;\\n        require(\\n            length == _datas.length && length == _values.length,\\n            \\\"OpsProxy: Length mismatch\\\"\\n        );\\n\\n        for (uint256 i; i < length; i++)\\n            executeCall(_targets[i], _datas[i], _values[i]);\\n    }\\n\\n    ///@inheritdoc IOpsProxy\\n    function executeCall(\\n        address _target,\\n        bytes calldata _data,\\n        uint256 _value\\n    ) public payable override onlyAuth {\\n        (, bytes memory returnData) = _call(\\n            _target,\\n            _data,\\n            _value,\\n            true,\\n            \\\"OpsProxy.executeCall: \\\"\\n        );\\n\\n        emit ExecuteCall(_target, _data, _value, returnData);\\n    }\\n\\n    function _getTaskCreator() private pure returns (address taskCreator) {\\n        assembly {\\n            taskCreator := shr(96, calldataload(sub(calldatasize(), 20)))\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3910527eb362878d5b030b2ce44b583850650f852da910d8ff7d05de2e643b04\",\"license\":\"UNLICENSED\"},\"contracts/opsProxy/OpsProxyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\nimport {\\n    BeaconProxy\\n} from \\\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\\\";\\nimport {\\n    Initializable\\n} from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport {Proxied} from \\\"../vendor/proxy/EIP173/Proxied.sol\\\";\\nimport {OpsProxy} from \\\"./OpsProxy.sol\\\";\\nimport {IBeacon} from \\\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\\\";\\nimport {IOpsProxy} from \\\"../interfaces/IOpsProxy.sol\\\";\\nimport {IOpsProxyFactory} from \\\"../interfaces/IOpsProxyFactory.sol\\\";\\n\\n// solhint-disable max-states-count\\ncontract OpsProxyFactory is IOpsProxyFactory, IBeacon, Proxied, Initializable {\\n    // solhint-disable const-name-snakecase\\n    uint256 public constant override version = 1;\\n    address public immutable ops;\\n    address public override implementation;\\n\\n    ///@dev track the next seed to be used by an EOA.\\n    mapping(address => bytes32) internal _nextSeeds;\\n\\n    ///@dev track deployed proxies\\n    mapping(address => bool) internal _proxies;\\n\\n    ///@dev track proxy of user\\n    mapping(address => address) internal _proxyOf;\\n\\n    modifier onlyOneProxy(address _account) {\\n        require(_proxyOf[_account] == address(0), \\\"OpsProxyFactory: One proxy\\\");\\n        _;\\n    }\\n\\n    modifier notProxy(address _account) {\\n        require(!isProxy(_account), \\\"OpsProxyFactory: No proxy\\\");\\n        _;\\n    }\\n\\n    constructor(address _ops) {\\n        ops = _ops;\\n    }\\n\\n    function initialize(address _implementation) external initializer {\\n        implementation = _implementation;\\n    }\\n\\n    ///@inheritdoc IOpsProxyFactory\\n    function updateBeaconImplementation(address _implementation)\\n        external\\n        override\\n        onlyProxyAdmin\\n    {\\n        address oldImplementation = implementation;\\n        implementation = _implementation;\\n\\n        emit BeaconUpdated(oldImplementation, _implementation);\\n    }\\n\\n    ///@inheritdoc IOpsProxyFactory\\n    function deploy() external override returns (address payable proxy) {\\n        proxy = deployFor(msg.sender);\\n    }\\n\\n    ///@inheritdoc IOpsProxyFactory\\n    function getNextSeed(address _account)\\n        external\\n        view\\n        override\\n        returns (bytes32)\\n    {\\n        return _nextSeeds[_account];\\n    }\\n\\n    ///@inheritdoc IOpsProxyFactory\\n    function getProxyOf(address _account)\\n        external\\n        view\\n        override\\n        returns (address, bool)\\n    {\\n        address proxyAddress = _proxyOf[_account];\\n\\n        if (proxyAddress != address(0)) return (proxyAddress, true);\\n\\n        proxyAddress = determineProxyAddress(_account);\\n        return (proxyAddress, false);\\n    }\\n\\n    ///@inheritdoc IOpsProxyFactory\\n    function getOwnerOf(address _proxy)\\n        external\\n        view\\n        override\\n        returns (address)\\n    {\\n        require(isProxy(_proxy), \\\"OpsProxyFactory: Not proxy\\\");\\n\\n        return IOpsProxy(_proxy).owner();\\n    }\\n\\n    ///@inheritdoc IOpsProxyFactory\\n    function deployFor(address owner)\\n        public\\n        override\\n        onlyOneProxy(owner)\\n        notProxy(owner)\\n        returns (address payable proxy)\\n    {\\n        (bytes32 seed, bytes32 salt) = _getSeedAndSalt(owner);\\n\\n        bytes memory bytecode = _getBytecode(owner);\\n\\n        proxy = _deploy(salt, bytecode);\\n\\n        _proxies[proxy] = true;\\n        _proxyOf[owner] = proxy;\\n\\n        unchecked {\\n            _nextSeeds[owner] = bytes32(uint256(seed) + 1);\\n        }\\n\\n        emit DeployProxy(msg.sender, owner, seed, salt, address(proxy));\\n    }\\n\\n    ///@inheritdoc IOpsProxyFactory\\n    function determineProxyAddress(address _account)\\n        public\\n        view\\n        override\\n        returns (address)\\n    {\\n        address proxyAddress = _proxyOf[_account];\\n        if (proxyAddress != address(0)) return proxyAddress;\\n\\n        (, bytes32 salt) = _getSeedAndSalt(_account);\\n\\n        bytes memory bytecode = _getBytecode(_account);\\n\\n        bytes32 codeHash = keccak256(\\n            abi.encodePacked(\\n                bytes1(0xff),\\n                address(this),\\n                salt,\\n                keccak256(bytecode)\\n            )\\n        );\\n\\n        return address(uint160(uint256(codeHash)));\\n    }\\n\\n    ///@inheritdoc IOpsProxyFactory\\n    function isProxy(address proxy) public view override returns (bool) {\\n        return _proxies[proxy];\\n    }\\n\\n    function _deploy(bytes32 _salt, bytes memory _bytecode)\\n        internal\\n        returns (address payable proxy)\\n    {\\n        assembly {\\n            let endowment := 0\\n            let bytecodeStart := add(_bytecode, 0x20)\\n            let bytecodeLength := mload(_bytecode)\\n            proxy := create2(endowment, bytecodeStart, bytecodeLength, _salt)\\n        }\\n    }\\n\\n    function _getSeedAndSalt(address _account)\\n        internal\\n        view\\n        returns (bytes32 seed, bytes32 salt)\\n    {\\n        seed = _nextSeeds[_account];\\n\\n        salt = keccak256(abi.encode(_account, seed));\\n    }\\n\\n    function _getBytecode(address _owner) internal view returns (bytes memory) {\\n        bytes memory opsProxyInitializeData = abi.encodeWithSelector(\\n            IOpsProxy.initialize.selector,\\n            _owner\\n        );\\n\\n        return\\n            abi.encodePacked(\\n                type(BeaconProxy).creationCode,\\n                abi.encode(address(this), opsProxyInitializeData)\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xb17c99b7c4db81df685cac2ef2ea46537006490d0be5c30e057cb11cba390567\",\"license\":\"UNLICENSED\"},\"contracts/vendor/gelato/GelatoBytes.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\nlibrary GelatoBytes {\\n    function calldataSliceSelector(bytes calldata _bytes)\\n        internal\\n        pure\\n        returns (bytes4 selector)\\n    {\\n        selector =\\n            _bytes[0] |\\n            (bytes4(_bytes[1]) >> 8) |\\n            (bytes4(_bytes[2]) >> 16) |\\n            (bytes4(_bytes[3]) >> 24);\\n    }\\n\\n    function memorySliceSelector(bytes memory _bytes)\\n        internal\\n        pure\\n        returns (bytes4 selector)\\n    {\\n        selector =\\n            _bytes[0] |\\n            (bytes4(_bytes[1]) >> 8) |\\n            (bytes4(_bytes[2]) >> 16) |\\n            (bytes4(_bytes[3]) >> 24);\\n    }\\n\\n    function revertWithError(bytes memory _bytes, string memory _tracingInfo)\\n        internal\\n        pure\\n    {\\n        // 68: 32-location, 32-length, 4-ErrorSelector, UTF-8 err\\n        if (_bytes.length % 32 == 4) {\\n            bytes4 selector;\\n            assembly {\\n                selector := mload(add(0x20, _bytes))\\n            }\\n            if (selector == 0x08c379a0) {\\n                // Function selector for Error(string)\\n                assembly {\\n                    _bytes := add(_bytes, 68)\\n                }\\n                revert(string(abi.encodePacked(_tracingInfo, string(_bytes))));\\n            } else {\\n                revert(\\n                    string(abi.encodePacked(_tracingInfo, \\\"NoErrorSelector\\\"))\\n                );\\n            }\\n        } else {\\n            revert(\\n                string(abi.encodePacked(_tracingInfo, \\\"UnexpectedReturndata\\\"))\\n            );\\n        }\\n    }\\n\\n    function returnError(bytes memory _bytes, string memory _tracingInfo)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        // 68: 32-location, 32-length, 4-ErrorSelector, UTF-8 err\\n        if (_bytes.length % 32 == 4) {\\n            bytes4 selector;\\n            assembly {\\n                selector := mload(add(0x20, _bytes))\\n            }\\n            if (selector == 0x08c379a0) {\\n                // Function selector for Error(string)\\n                assembly {\\n                    _bytes := add(_bytes, 68)\\n                }\\n                return string(abi.encodePacked(_tracingInfo, string(_bytes)));\\n            } else {\\n                return\\n                    string(abi.encodePacked(_tracingInfo, \\\"NoErrorSelector\\\"));\\n            }\\n        } else {\\n            return\\n                string(abi.encodePacked(_tracingInfo, \\\"UnexpectedReturndata\\\"));\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6ec59b2c6f678f3bbe186677e5970e59e46a40d22881dc813c49ffb18e417951\",\"license\":\"UNLICENSED\"},\"contracts/vendor/proxy/EIP173/Proxied.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.12;\\n\\nabstract contract Proxied {\\n    /// @notice to be used by initialisation / postUpgrade function so that only the proxy's admin can execute them\\n    /// It also allows these functions to be called inside a contructor\\n    /// even if the contract is meant to be used without proxy\\n    modifier proxied() {\\n        address proxyAdminAddress = _proxyAdmin();\\n        // With hardhat-deploy proxies\\n        // the proxyAdminAddress is zero only for the implementation contract\\n        // if the implementation contract want to be used as a standalone/immutable contract\\n        // it simply has to execute the `proxied` function\\n        // This ensure the proxyAdminAddress is never zero post deployment\\n        // And allow you to keep the same code for both proxied contract and immutable contract\\n        if (proxyAdminAddress == address(0)) {\\n            // ensure can not be called twice when used outside of proxy : no admin\\n            // solhint-disable-next-line security/no-inline-assembly\\n            assembly {\\n                sstore(\\n                    0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103,\\n                    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\\n                )\\n            }\\n        } else {\\n            require(msg.sender == proxyAdminAddress);\\n        }\\n        _;\\n    }\\n\\n    modifier onlyProxyAdmin() {\\n        require(msg.sender == _proxyAdmin(), \\\"NOT_AUTHORIZED\\\");\\n        _;\\n    }\\n\\n    function _proxyAdmin() internal view returns (address adminAddress) {\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            adminAddress := sload(\\n                0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\\n            )\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x428ced1961d42c505a3e49d90498f92f4b0df8537e5ffa59f14ba375d99150a1\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620026f2380380620026f28339818101604052810190620000379190620000dc565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200010e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a48262000077565b9050919050565b620000b68162000097565b8114620000c257600080fd5b50565b600081519050620000d681620000ab565b92915050565b600060208284031215620000f557620000f462000072565b5b60006200010584828501620000c5565b91505092915050565b6080516125c86200012a6000396000610b8b01526125c86000f3fe60806040523480156200001157600080fd5b5060043610620000c45760003560e01c806374912cd2116200007b57806374912cd214620001cf578063775c300c1462000205578063bd4972c31462000227578063c4d66de8146200025d578063ded89a7c146200027d578063e70abe9214620002b457620000c4565b80632971038814620000c957806337a6be1614620000ff57806354fd4d5014620001355780635c60da1b1462000157578063606aa7151462000179578063735a032414620001af575b600080fd5b620000e76004803603810190620000e1919062000df6565b620002d6565b604051620000f6919062000e45565b60405180910390f35b6200011d600480360381019062000117919062000df6565b6200032c565b6040516200012c919062000e7d565b60405180910390f35b6200013f62000375565b6040516200014e919062000eb5565b60405180910390f35b620001616200037a565b60405162000170919062000ee3565b60405180910390f35b62000197600480360381019062000191919062000df6565b620003a0565b604051620001a6919062000ee3565b60405180910390f35b620001cd6004803603810190620001c7919062000df6565b620004b1565b005b620001ed6004803603810190620001e7919062000df6565b620005d1565b604051620001fc919062000f25565b60405180910390f35b6200020f620008bb565b6040516200021e919062000f25565b60405180910390f35b6200024560048036038101906200023f919062000df6565b620008cd565b60405162000254919062000ee3565b60405180910390f35b6200027b600480360381019062000275919062000df6565b62000995565b005b6200029b600480360381019062000295919062000df6565b62000ac4565b604051620002ab92919062000f42565b60405180910390f35b620002be62000b89565b604051620002cd919062000ee3565b60405180910390f35b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600181565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620004445780915050620004ac565b6000620004518462000bad565b9150506000620004618562000c24565b9050600060ff60f81b3084848051906020012060405160200162000489949392919062001035565b6040516020818303038152906040528051906020012090508060001c9450505050505b919050565b620004bb62000d16565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200052b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200052290620010ec565b60405180910390fd5b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f46a98d582ba4c3ce698945c0010d1e6e1ba1c4a413ee1dfb18c0b31076be79e98183604051620005c59291906200110e565b60405180910390a15050565b600081600073ffffffffffffffffffffffffffffffffffffffff16600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620006a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200069c906200118b565b60405180910390fd5b82620006b181620002d6565b15620006f4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006eb90620011fd565b60405180910390fd5b600080620007028662000bad565b915091506000620007138762000c24565b905062000721828262000d3f565b95506001600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555085600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018360001c0160001b600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1bd7b67c90068c779f5700cbfefe89aea540a111a3eea6c228fd9d2b5d74a92a85858a604051620008a9939291906200121f565b60405180910390a35050505050919050565b6000620008c833620005d1565b905090565b6000620008da82620002d6565b6200091c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200091390620012ac565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000968573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200098e9190620012e5565b9050919050565b600060019054906101000a900460ff16620009bf5760008054906101000a900460ff1615620009ca565b620009c962000d58565b5b62000a0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000a03906200138d565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000a5d576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550801562000ac05760008060016101000a81548160ff0219169083151502179055505b5050565b6000806000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161462000b6e57806001925092505062000b84565b62000b7984620003a0565b905080600092509250505b915091565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150828260405160200162000c07929190620013af565b604051602081830303815290604052805190602001209050915091565b6060600063c4d66de860e01b8360405160240162000c43919062000ee3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506040518060200162000cb49062000d7e565b6020820181038252601f19601f82011660405250308260405160200162000cdd92919062001480565b60405160208183030381529060405260405160200162000cff929190620014f6565b604051602081830303815290604052915050919050565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354905090565b60008060208301835185818385f5935050505092915050565b600062000d653062000d6b565b15905090565b600080823b905060008111915050919050565b611074806200151f83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000dbe8262000d91565b9050919050565b62000dd08162000db1565b811462000ddc57600080fd5b50565b60008135905062000df08162000dc5565b92915050565b60006020828403121562000e0f5762000e0e62000d8c565b5b600062000e1f8482850162000ddf565b91505092915050565b60008115159050919050565b62000e3f8162000e28565b82525050565b600060208201905062000e5c600083018462000e34565b92915050565b6000819050919050565b62000e778162000e62565b82525050565b600060208201905062000e94600083018462000e6c565b92915050565b6000819050919050565b62000eaf8162000e9a565b82525050565b600060208201905062000ecc600083018462000ea4565b92915050565b62000edd8162000db1565b82525050565b600060208201905062000efa600083018462000ed2565b92915050565b600062000f0d8262000d91565b9050919050565b62000f1f8162000f00565b82525050565b600060208201905062000f3c600083018462000f14565b92915050565b600060408201905062000f59600083018562000ed2565b62000f68602083018462000e34565b9392505050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b62000fba62000fb48262000f6f565b62000f9b565b82525050565b60008160601b9050919050565b600062000fda8262000fc0565b9050919050565b600062000fee8262000fcd565b9050919050565b6200100a620010048262000db1565b62000fe1565b82525050565b6000819050919050565b6200102f620010298262000e62565b62001010565b82525050565b600062001043828762000fa5565b60018201915062001055828662000ff5565b6014820191506200106782856200101a565b6020820191506200107982846200101a565b60208201915081905095945050505050565b600082825260208201905092915050565b7f4e4f545f415554484f52495a4544000000000000000000000000000000000000600082015250565b6000620010d4600e836200108b565b9150620010e1826200109c565b602082019050919050565b600060208201905081810360008301526200110781620010c5565b9050919050565b600060408201905062001125600083018562000ed2565b62001134602083018462000ed2565b9392505050565b7f4f707350726f7879466163746f72793a204f6e652070726f7879000000000000600082015250565b600062001173601a836200108b565b915062001180826200113b565b602082019050919050565b60006020820190508181036000830152620011a68162001164565b9050919050565b7f4f707350726f7879466163746f72793a204e6f2070726f787900000000000000600082015250565b6000620011e56019836200108b565b9150620011f282620011ad565b602082019050919050565b600060208201905081810360008301526200121881620011d6565b9050919050565b600060608201905062001236600083018662000e6c565b62001245602083018562000e6c565b62001254604083018462000ed2565b949350505050565b7f4f707350726f7879466163746f72793a204e6f742070726f7879000000000000600082015250565b600062001294601a836200108b565b9150620012a1826200125c565b602082019050919050565b60006020820190508181036000830152620012c78162001285565b9050919050565b600081519050620012df8162000dc5565b92915050565b600060208284031215620012fe57620012fd62000d8c565b5b60006200130e84828501620012ce565b91505092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600062001375602e836200108b565b9150620013828262001317565b604082019050919050565b60006020820190508181036000830152620013a88162001366565b9050919050565b6000604082019050620013c6600083018562000ed2565b620013d5602083018462000e6c565b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562001418578082015181840152602081019050620013fb565b8381111562001428576000848401525b50505050565b6000601f19601f8301169050919050565b60006200144c82620013dc565b620014588185620013e7565b93506200146a818560208601620013f8565b62001475816200142e565b840191505092915050565b600060408201905062001497600083018562000ed2565b8181036020830152620014ab81846200143f565b90509392505050565b600081905092915050565b6000620014cc82620013dc565b620014d88185620014b4565b9350620014ea818560208601620013f8565b80840191505092915050565b6000620015048285620014bf565b9150620015128284620014bf565b9150819050939250505056fe608060405260405162001074380380620010748339818101604052810190620000299190620006fa565b60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5160001c6200005b919062000799565b60001b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b14620000935762000092620007d4565b5b620000a782826000620000af60201b60201c565b505062000ae4565b620000c083620001a660201b60201c565b8273ffffffffffffffffffffffffffffffffffffffff167f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e60405160405180910390a2600082511180620001115750805b15620001a1576200019f8373ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000167573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200018d919062000803565b836200034560201b620000371760201c565b505b505050565b620001bc816200037b60201b620000641760201c565b620001fe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001f590620008bc565b60405180910390fd5b620002858173ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200024e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000274919062000803565b6200037b60201b620000641760201c565b620002c7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002be9062000954565b60405180910390fd5b80620003017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6200039e60201b620000871760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606200037383836040518060600160405280602781526020016200104d60279139620003a860201b60201c565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b6060620003bb846200037b60201b60201c565b620003fd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003f490620009ec565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405162000427919062000a5b565b600060405180830381855af49150503d806000811462000464576040519150601f19603f3d011682016040523d82523d6000602084013e62000469565b606091505b5091509150620004818282866200048c60201b60201c565b925050509392505050565b606083156200049e57829050620004f1565b600083511115620004b25782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004e8919062000ac0565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000539826200050c565b9050919050565b6200054b816200052c565b81146200055757600080fd5b50565b6000815190506200056b8162000540565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620005c6826200057b565b810181811067ffffffffffffffff82111715620005e857620005e76200058c565b5b80604052505050565b6000620005fd620004f8565b90506200060b8282620005bb565b919050565b600067ffffffffffffffff8211156200062e576200062d6200058c565b5b62000639826200057b565b9050602081019050919050565b60005b838110156200066657808201518184015260208101905062000649565b8381111562000676576000848401525b50505050565b6000620006936200068d8462000610565b620005f1565b905082815260208101848484011115620006b257620006b162000576565b5b620006bf84828562000646565b509392505050565b600082601f830112620006df57620006de62000571565b5b8151620006f18482602086016200067c565b91505092915050565b6000806040838503121562000714576200071362000502565b5b600062000724858286016200055a565b925050602083015167ffffffffffffffff81111562000748576200074762000507565b5b6200075685828601620006c7565b9150509250929050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007a68262000760565b9150620007b38362000760565b925082821015620007c957620007c86200076a565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000602082840312156200081c576200081b62000502565b5b60006200082c848285016200055a565b91505092915050565b600082825260208201905092915050565b7f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60008201527f7472616374000000000000000000000000000000000000000000000000000000602082015250565b6000620008a460258362000835565b9150620008b18262000846565b604082019050919050565b60006020820190508181036000830152620008d78162000895565b9050919050565b7f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960008201527f73206e6f74206120636f6e747261637400000000000000000000000000000000602082015250565b60006200093c60308362000835565b91506200094982620008de565b604082019050919050565b600060208201905081810360008301526200096f816200092d565b9050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b6000620009d460268362000835565b9150620009e18262000976565b604082019050919050565b6000602082019050818103600083015262000a0781620009c5565b9050919050565b600081519050919050565b600081905092915050565b600062000a318262000a0e565b62000a3d818562000a19565b935062000a4f81856020860162000646565b80840191505092915050565b600062000a69828462000a24565b915081905092915050565b600081519050919050565b600062000a8c8262000a74565b62000a98818562000835565b935062000aaa81856020860162000646565b62000ab5816200057b565b840191505092915050565b6000602082019050818103600083015262000adc818462000a7f565b905092915050565b6105598062000af46000396000f3fe6080604052366100135761001161001d565b005b61001b61001d565b005b610025610091565b610035610030610093565b610110565b565b606061005c83836040518060600160405280602781526020016104fd60279139610136565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b565b600061009d610203565b73ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010b9190610324565b905090565b3660008037600080366000845af43d6000803e8060008114610131573d6000f35b3d6000fd5b606061014184610064565b610180576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610177906103d4565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516101a8919061046e565b600060405180830381855af49150503d80600081146101e3576040519150601f19603f3d011682016040523d82523d6000602084013e6101e8565b606091505b50915091506101f882828661025a565b925050509392505050565b60006102317fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b610087565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060831561026a578290506102ba565b60008351111561027d5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b191906104da565b60405180910390fd5b9392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f1826102c6565b9050919050565b610301816102e6565b811461030c57600080fd5b50565b60008151905061031e816102f8565b92915050565b60006020828403121561033a576103396102c1565b5b60006103488482850161030f565b91505092915050565b600082825260208201905092915050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b60006103be602683610351565b91506103c982610362565b604082019050919050565b600060208201905081810360008301526103ed816103b1565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561042857808201518184015260208101905061040d565b83811115610437576000848401525b50505050565b6000610448826103f4565b61045281856103ff565b935061046281856020860161040a565b80840191505092915050565b600061047a828461043d565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006104ac82610485565b6104b68185610351565b93506104c681856020860161040a565b6104cf81610490565b840191505092915050565b600060208201905081810360008301526104f481846104a1565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220831eb3e6a79c53f76fa304e646cb09c2fb3fa11865f3b66537fd1c996000bdce64736f6c634300080e0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208d0e973d96997225a09da0248e06cebbdba569862e121ac152d6c63605fd40d664736f6c634300080e0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000c45760003560e01c806374912cd2116200007b57806374912cd214620001cf578063775c300c1462000205578063bd4972c31462000227578063c4d66de8146200025d578063ded89a7c146200027d578063e70abe9214620002b457620000c4565b80632971038814620000c957806337a6be1614620000ff57806354fd4d5014620001355780635c60da1b1462000157578063606aa7151462000179578063735a032414620001af575b600080fd5b620000e76004803603810190620000e1919062000df6565b620002d6565b604051620000f6919062000e45565b60405180910390f35b6200011d600480360381019062000117919062000df6565b6200032c565b6040516200012c919062000e7d565b60405180910390f35b6200013f62000375565b6040516200014e919062000eb5565b60405180910390f35b620001616200037a565b60405162000170919062000ee3565b60405180910390f35b62000197600480360381019062000191919062000df6565b620003a0565b604051620001a6919062000ee3565b60405180910390f35b620001cd6004803603810190620001c7919062000df6565b620004b1565b005b620001ed6004803603810190620001e7919062000df6565b620005d1565b604051620001fc919062000f25565b60405180910390f35b6200020f620008bb565b6040516200021e919062000f25565b60405180910390f35b6200024560048036038101906200023f919062000df6565b620008cd565b60405162000254919062000ee3565b60405180910390f35b6200027b600480360381019062000275919062000df6565b62000995565b005b6200029b600480360381019062000295919062000df6565b62000ac4565b604051620002ab92919062000f42565b60405180910390f35b620002be62000b89565b604051620002cd919062000ee3565b60405180910390f35b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600181565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620004445780915050620004ac565b6000620004518462000bad565b9150506000620004618562000c24565b9050600060ff60f81b3084848051906020012060405160200162000489949392919062001035565b6040516020818303038152906040528051906020012090508060001c9450505050505b919050565b620004bb62000d16565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200052b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200052290620010ec565b60405180910390fd5b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f46a98d582ba4c3ce698945c0010d1e6e1ba1c4a413ee1dfb18c0b31076be79e98183604051620005c59291906200110e565b60405180910390a15050565b600081600073ffffffffffffffffffffffffffffffffffffffff16600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620006a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200069c906200118b565b60405180910390fd5b82620006b181620002d6565b15620006f4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006eb90620011fd565b60405180910390fd5b600080620007028662000bad565b915091506000620007138762000c24565b905062000721828262000d3f565b95506001600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555085600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018360001c0160001b600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1bd7b67c90068c779f5700cbfefe89aea540a111a3eea6c228fd9d2b5d74a92a85858a604051620008a9939291906200121f565b60405180910390a35050505050919050565b6000620008c833620005d1565b905090565b6000620008da82620002d6565b6200091c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200091390620012ac565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000968573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200098e9190620012e5565b9050919050565b600060019054906101000a900460ff16620009bf5760008054906101000a900460ff1615620009ca565b620009c962000d58565b5b62000a0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000a03906200138d565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000a5d576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550801562000ac05760008060016101000a81548160ff0219169083151502179055505b5050565b6000806000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161462000b6e57806001925092505062000b84565b62000b7984620003a0565b905080600092509250505b915091565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150828260405160200162000c07929190620013af565b604051602081830303815290604052805190602001209050915091565b6060600063c4d66de860e01b8360405160240162000c43919062000ee3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506040518060200162000cb49062000d7e565b6020820181038252601f19601f82011660405250308260405160200162000cdd92919062001480565b60405160208183030381529060405260405160200162000cff929190620014f6565b604051602081830303815290604052915050919050565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354905090565b60008060208301835185818385f5935050505092915050565b600062000d653062000d6b565b15905090565b600080823b905060008111915050919050565b611074806200151f83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000dbe8262000d91565b9050919050565b62000dd08162000db1565b811462000ddc57600080fd5b50565b60008135905062000df08162000dc5565b92915050565b60006020828403121562000e0f5762000e0e62000d8c565b5b600062000e1f8482850162000ddf565b91505092915050565b60008115159050919050565b62000e3f8162000e28565b82525050565b600060208201905062000e5c600083018462000e34565b92915050565b6000819050919050565b62000e778162000e62565b82525050565b600060208201905062000e94600083018462000e6c565b92915050565b6000819050919050565b62000eaf8162000e9a565b82525050565b600060208201905062000ecc600083018462000ea4565b92915050565b62000edd8162000db1565b82525050565b600060208201905062000efa600083018462000ed2565b92915050565b600062000f0d8262000d91565b9050919050565b62000f1f8162000f00565b82525050565b600060208201905062000f3c600083018462000f14565b92915050565b600060408201905062000f59600083018562000ed2565b62000f68602083018462000e34565b9392505050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b62000fba62000fb48262000f6f565b62000f9b565b82525050565b60008160601b9050919050565b600062000fda8262000fc0565b9050919050565b600062000fee8262000fcd565b9050919050565b6200100a620010048262000db1565b62000fe1565b82525050565b6000819050919050565b6200102f620010298262000e62565b62001010565b82525050565b600062001043828762000fa5565b60018201915062001055828662000ff5565b6014820191506200106782856200101a565b6020820191506200107982846200101a565b60208201915081905095945050505050565b600082825260208201905092915050565b7f4e4f545f415554484f52495a4544000000000000000000000000000000000000600082015250565b6000620010d4600e836200108b565b9150620010e1826200109c565b602082019050919050565b600060208201905081810360008301526200110781620010c5565b9050919050565b600060408201905062001125600083018562000ed2565b62001134602083018462000ed2565b9392505050565b7f4f707350726f7879466163746f72793a204f6e652070726f7879000000000000600082015250565b600062001173601a836200108b565b915062001180826200113b565b602082019050919050565b60006020820190508181036000830152620011a68162001164565b9050919050565b7f4f707350726f7879466163746f72793a204e6f2070726f787900000000000000600082015250565b6000620011e56019836200108b565b9150620011f282620011ad565b602082019050919050565b600060208201905081810360008301526200121881620011d6565b9050919050565b600060608201905062001236600083018662000e6c565b62001245602083018562000e6c565b62001254604083018462000ed2565b949350505050565b7f4f707350726f7879466163746f72793a204e6f742070726f7879000000000000600082015250565b600062001294601a836200108b565b9150620012a1826200125c565b602082019050919050565b60006020820190508181036000830152620012c78162001285565b9050919050565b600081519050620012df8162000dc5565b92915050565b600060208284031215620012fe57620012fd62000d8c565b5b60006200130e84828501620012ce565b91505092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600062001375602e836200108b565b9150620013828262001317565b604082019050919050565b60006020820190508181036000830152620013a88162001366565b9050919050565b6000604082019050620013c6600083018562000ed2565b620013d5602083018462000e6c565b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562001418578082015181840152602081019050620013fb565b8381111562001428576000848401525b50505050565b6000601f19601f8301169050919050565b60006200144c82620013dc565b620014588185620013e7565b93506200146a818560208601620013f8565b62001475816200142e565b840191505092915050565b600060408201905062001497600083018562000ed2565b8181036020830152620014ab81846200143f565b90509392505050565b600081905092915050565b6000620014cc82620013dc565b620014d88185620014b4565b9350620014ea818560208601620013f8565b80840191505092915050565b6000620015048285620014bf565b9150620015128284620014bf565b9150819050939250505056fe608060405260405162001074380380620010748339818101604052810190620000299190620006fa565b60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5160001c6200005b919062000799565b60001b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b14620000935762000092620007d4565b5b620000a782826000620000af60201b60201c565b505062000ae4565b620000c083620001a660201b60201c565b8273ffffffffffffffffffffffffffffffffffffffff167f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e60405160405180910390a2600082511180620001115750805b15620001a1576200019f8373ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000167573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200018d919062000803565b836200034560201b620000371760201c565b505b505050565b620001bc816200037b60201b620000641760201c565b620001fe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001f590620008bc565b60405180910390fd5b620002858173ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200024e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000274919062000803565b6200037b60201b620000641760201c565b620002c7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002be9062000954565b60405180910390fd5b80620003017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6200039e60201b620000871760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606200037383836040518060600160405280602781526020016200104d60279139620003a860201b60201c565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b6060620003bb846200037b60201b60201c565b620003fd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003f490620009ec565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405162000427919062000a5b565b600060405180830381855af49150503d806000811462000464576040519150601f19603f3d011682016040523d82523d6000602084013e62000469565b606091505b5091509150620004818282866200048c60201b60201c565b925050509392505050565b606083156200049e57829050620004f1565b600083511115620004b25782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004e8919062000ac0565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000539826200050c565b9050919050565b6200054b816200052c565b81146200055757600080fd5b50565b6000815190506200056b8162000540565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620005c6826200057b565b810181811067ffffffffffffffff82111715620005e857620005e76200058c565b5b80604052505050565b6000620005fd620004f8565b90506200060b8282620005bb565b919050565b600067ffffffffffffffff8211156200062e576200062d6200058c565b5b62000639826200057b565b9050602081019050919050565b60005b838110156200066657808201518184015260208101905062000649565b8381111562000676576000848401525b50505050565b6000620006936200068d8462000610565b620005f1565b905082815260208101848484011115620006b257620006b162000576565b5b620006bf84828562000646565b509392505050565b600082601f830112620006df57620006de62000571565b5b8151620006f18482602086016200067c565b91505092915050565b6000806040838503121562000714576200071362000502565b5b600062000724858286016200055a565b925050602083015167ffffffffffffffff81111562000748576200074762000507565b5b6200075685828601620006c7565b9150509250929050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007a68262000760565b9150620007b38362000760565b925082821015620007c957620007c86200076a565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000602082840312156200081c576200081b62000502565b5b60006200082c848285016200055a565b91505092915050565b600082825260208201905092915050565b7f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60008201527f7472616374000000000000000000000000000000000000000000000000000000602082015250565b6000620008a460258362000835565b9150620008b18262000846565b604082019050919050565b60006020820190508181036000830152620008d78162000895565b9050919050565b7f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960008201527f73206e6f74206120636f6e747261637400000000000000000000000000000000602082015250565b60006200093c60308362000835565b91506200094982620008de565b604082019050919050565b600060208201905081810360008301526200096f816200092d565b9050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b6000620009d460268362000835565b9150620009e18262000976565b604082019050919050565b6000602082019050818103600083015262000a0781620009c5565b9050919050565b600081519050919050565b600081905092915050565b600062000a318262000a0e565b62000a3d818562000a19565b935062000a4f81856020860162000646565b80840191505092915050565b600062000a69828462000a24565b915081905092915050565b600081519050919050565b600062000a8c8262000a74565b62000a98818562000835565b935062000aaa81856020860162000646565b62000ab5816200057b565b840191505092915050565b6000602082019050818103600083015262000adc818462000a7f565b905092915050565b6105598062000af46000396000f3fe6080604052366100135761001161001d565b005b61001b61001d565b005b610025610091565b610035610030610093565b610110565b565b606061005c83836040518060600160405280602781526020016104fd60279139610136565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b565b600061009d610203565b73ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010b9190610324565b905090565b3660008037600080366000845af43d6000803e8060008114610131573d6000f35b3d6000fd5b606061014184610064565b610180576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610177906103d4565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516101a8919061046e565b600060405180830381855af49150503d80600081146101e3576040519150601f19603f3d011682016040523d82523d6000602084013e6101e8565b606091505b50915091506101f882828661025a565b925050509392505050565b60006102317fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b610087565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060831561026a578290506102ba565b60008351111561027d5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b191906104da565b60405180910390fd5b9392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f1826102c6565b9050919050565b610301816102e6565b811461030c57600080fd5b50565b60008151905061031e816102f8565b92915050565b60006020828403121561033a576103396102c1565b5b60006103488482850161030f565b91505092915050565b600082825260208201905092915050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b60006103be602683610351565b91506103c982610362565b604082019050919050565b600060208201905081810360008301526103ed816103b1565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561042857808201518184015260208101905061040d565b83811115610437576000848401525b50505050565b6000610448826103f4565b61045281856103ff565b935061046281856020860161040a565b80840191505092915050565b600061047a828461043d565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006104ac82610485565b6104b68185610351565b93506104c681856020860161040a565b6104cf81610490565b840191505092915050565b600060208201905081810360008301526104f481846104a1565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220831eb3e6a79c53f76fa304e646cb09c2fb3fa11865f3b66537fd1c996000bdce64736f6c634300080e0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208d0e973d96997225a09da0248e06cebbdba569862e121ac152d6c63605fd40d664736f6c634300080e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deploy()": {
        "returns": {
          "proxy": "Address of deployed proxy."
        }
      },
      "deployFor(address)": {
        "params": {
          "owner": "Address to deploy the proxy for."
        },
        "returns": {
          "proxy": "Address of deployed proxy."
        }
      },
      "determineProxyAddress(address)": {
        "params": {
          "account": "Address to determine the proxy address for."
        }
      },
      "getNextSeed(address)": {
        "returns": {
          "_0": "bytes32 Next seed which will be used for deployment for an address."
        }
      },
      "getOwnerOf(address)": {
        "returns": {
          "_0": "address Owner of deployed proxy."
        }
      },
      "getProxyOf(address)": {
        "returns": {
          "_0": "address Proxy address owned by account.",
          "_1": "bool Whether if proxy is deployed"
        }
      },
      "isProxy(address)": {
        "returns": {
          "_0": "bool Whether if a contract is an OpsProxy."
        }
      },
      "updateBeaconImplementation(address)": {
        "params": {
          "implementation": "New OpsProxy implementation to be updated to."
        }
      }
    },
    "stateVariables": {
      "_nextSeeds": {
        "details": "track the next seed to be used by an EOA."
      },
      "_proxies": {
        "details": "track deployed proxies"
      },
      "_proxyOf": {
        "details": "track proxy of user"
      },
      "implementation": {
        "details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
      },
      "version": {
        "return": "uint256 version of OpsProxyFactory.",
        "returns": {
          "_0": "uint256 version of OpsProxyFactory."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "BeaconUpdated(address,address)": {
        "notice": "Emitted when OpsProxy implementation is updated"
      },
      "DeployProxy(address,address,bytes32,bytes32,address)": {
        "notice": "Emitted when an OpsProxy is deployed."
      }
    },
    "kind": "user",
    "methods": {
      "deploy()": {
        "notice": "Deploys OpsProxy for the msg.sender."
      },
      "deployFor(address)": {
        "notice": "Deploys OpsProxy for another address."
      },
      "determineProxyAddress(address)": {
        "notice": "Determines the OpsProxy address when it is not deployed."
      },
      "updateBeaconImplementation(address)": {
        "notice": "Update OpsProxy implementation"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6,
        "contract": "contracts/opsProxy/OpsProxyFactory.sol:OpsProxyFactory",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 9,
        "contract": "contracts/opsProxy/OpsProxyFactory.sol:OpsProxyFactory",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 5781,
        "contract": "contracts/opsProxy/OpsProxyFactory.sol:OpsProxyFactory",
        "label": "implementation",
        "offset": 2,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5786,
        "contract": "contracts/opsProxy/OpsProxyFactory.sol:OpsProxyFactory",
        "label": "_nextSeeds",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bytes32)"
      },
      {
        "astId": 5791,
        "contract": "contracts/opsProxy/OpsProxyFactory.sol:OpsProxyFactory",
        "label": "_proxies",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 5796,
        "contract": "contracts/opsProxy/OpsProxyFactory.sol:OpsProxyFactory",
        "label": "_proxyOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      }
    }
  }
}
